#!/bin/bash
if [[ $EUID -ne 0 ]];
then
    exec pkexec --disable-internal-agent "$0" "$@"
fi
argdata=$1
ready_watcher=/tmp/ima-update-ready-to-deploy
downloadpath=/home/.ima/updatecontainer

IMGTYPE=".img.zst"
SIGTYPE="${IMGTYPE}.sha256"

if [[ "$2" == "--settingsapp" ]]; then
    WITH_SETTINGSAPP_EXPORTS=1
fi

if [[ $WITH_SETTINGSAPP_EXPORTS ]]; then
    msgprefix="CMSG="
    exitcode_success=51
    exitcode_fault=50
else
    exitcode_success=0
    exitcode_fault=1
fi

# We assume we entered this step only after confirming that we are okay to continue.
verintg(){
    echo "Starting to update..."
    if [[ -f "${installcontainer}" ]]; then
        CURR_SHA=$(echo $(sha256sum ${installcontainer}) | awk '{print $1}')
        if [[ "${CURR_SHA}" == "$(cat ${installsha})" ]]; then
            echo -e "${msgprefix}Validity matches. Continuing to next step."
        else
            rm -rf ${downloadpath}/${IMAGEFILE}
               echo "${msgprefix}Verification failed. Download contents erased."
               exit ${exitcode_fault}
        fi
    else
        echo "${msgprefix}Unable to find update container. (Download issues?)"
        exit ${exitcode_fault}
    fi
}

cleandeployments(){
    source /etc/ima-release
    DEPLOYMENTS_PATH=$(btrfs subvolume list /ima_root | awk '{print $9}' | grep -v ${IMAGE_ID})
    if [[ -z "${DEPLOYMENTS_PATH}" ]]; then
        echo "${msgprefix}No unused deployments detected."
    else
        for deployment in $DEPLOYMENTS_PATH;
        do
            echo "${msgprefix}Removing unused deployment $deployment..."
            btrfs subvolume delete /ima_root/$deployment
            echo "${msgprefix}Finished cleaning up deployments..."
            echo "${msgprefix}Going to next step."
        done
    fi
}

finalizeupd(){
    ima-deploy switch rootfs/${IMAGEFILE}
    echo "${msgprefix}Cleaning up..."
    rm -rf ${downloadpath}/${IMAGEFILE}/
    echo "${msgprefix}Update complete."
}

beginupd(){
    # Decompress update container
    echo "${msgprefix}Removing unused snapshots..."
    cleandeployments
    echo "${msgprefix}Installing OS Image ${STAGING_OS_TAG}..."
    ima-deploy install ${installcontainer}
    finalizeupd
}

if [[ -f ${argdata} ]]; then
    if [[ -f "${ready_watcher}" ]]; then
        source ${argdata}
        installcontainer=${downloadpath}/${IMAGEFILE}/${IMAGEFILE}${IMGTYPE}
        installsha=${downloadpath}/${IMAGEFILE}/${IMAGEFILE}${SIGTYPE}
        verintg
        beginupd
        exit ${exitcode_success}
    else
        echo -e "${msgprefix}Arg data was found, but ready to update sentinel was not found.\nAre you sure that the update container download was completed?\nTry running [38;2;23;147;209mima-update check && ima-update download-update[0m to verify container integrity again."
    fi
else
    echo "${msgprefix}No deploy arguments set."
    exit ${exitcode_fault}
fi
