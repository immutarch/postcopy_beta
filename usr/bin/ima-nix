#!/bin/bash

export NIXPKGS_ALLOW_UNFREE=1
export NIXPKGS_ALLOW_BROKEN=1

install_nix(){
    if [[ "$(nix-channel --list | grep nixpkgs)" ]]; then
        nix-check-for-updates
        HAS_CONFIGURED=true
    else
        echo "Initial Nix configuration required, please wait..."
        NIX_CHANNEL_VER=$(curl -s https://nixos.wiki/wiki/Nix_channels | grep "Most users will want the stable/large channel, currently" | cut -d ' ' -f 9 | sed 's/<*code>//g' | sed 's/(//g' | sed 's/<.*//g')
        nix-channel --add https://nixos.org/channels/${NIX_CHANNEL_VER} nixpkgs
        nix-channel --update
        HAS_CONFIGURED=true
    fi
    if [[ "$(nix-channel --list | grep nixgl)" ]]; then
        echo "No MESA configuration required"
    else
        echo "NixGL channel wasn't found, it's required for initial graphical setup, please wait..."
        nix-channel --add https://github.com/nix-community/nixGL/archive/main.tar.gz nixgl
        nix-channel --update
        nix-env -iA nixgl.auto.nixGLDefault
        echo "Updating application shortcuts..."
        /usr/bin/kbuildsycoca* --noincremental
        cleanup_seq
        ima-nix-mesa-binder
    fi
    if [[ "$HAS_CONFIGURED" == "true" ]]; then
        nix-env -iA nixpkgs.$1
        cleanup_seq
    fi
}

nixgl-config(){
    if [[ "$(nix-channel --list | grep nixgl)" ]]; then
        HAS_NIXGL_REPO_CONFIGURED=true
    else
        echo "NixGL channel wasn't found, please wait..."
        nix-channel --add https://github.com/nix-community/nixGL/archive/main.tar.gz nixgl
        nix-channel --update
        HAS_NIXGL_REPO_CONFIGURED=true
    fi
    if [[ "$HAS_NIXGL_REPO_CONFIGURED" == "true" ]]; then
        nix-env -iA nixgl.auto.nixGLDefault
        cleanup_seq
        ima-nix-mesa-binder
    fi
}

ch_ic(){
    ping -c 1 github.com 1>/dev/null
    if [[ "$?" != "0" ]]; then
        echo "Please check your internet connection, unable to connect to GitHub."
        exit 125
    fi
}

cleanup_seq(){
    nix-collect-garbage
}

nix-check-for-updates(){
    CURRENT_CHANNEL_BRANCH=$(nix-channel --list | grep nixpkgs | cut -d '/' -f 5)
    NIX_CHANNEL_VER=$(curl -s https://nixos.wiki/wiki/Nix_channels | grep "Most users will want the stable/large channel, currently" | cut -d ' ' -f 9 | sed 's/<*code>//g' | sed 's/(//g' | sed 's/<.*//g')
    if [[ $CURRENT_CHANNEL_BRANCH != $NIX_CHANNEL_VER ]]; then
        echo "Current \"${CURRENT_CHANNEL_BRANCH}\" channel for nixpkgs is outdated. Updating to \"${NIX_CHANNEL_VER}\"..."
        nix-channel --remove nixpkgs
        nix-channel --add https://nixos.org/channels/${NIX_CHANNEL_VER} nixpkgs
        nix-channel --update
    fi
}

nix_uninstall(){
    PACKAGE=$(nix-env --query --installed | grep "$1")
    if [[ "${PACKAGE}" ]]; then
        nix-env --uninstall ${PACKAGE}
    else
        echo "Package $1 cannot be uninstalled as it's not found in your profile"
    fi
}
# Main function
main() {
    if [[ $# -lt 1 ]]; then
        echo "Usage: $0 <command> [install|nixgl-install|remove|cleanup]"
        exit 1
    fi

    local command="$1"
    shift

    case "$command" in
        install)
            ch_ic
            install_nix "$1"
            ;;
        mesa-config)
            ch_ic
            nixgl-config
            ;;
        remove)
            nix_uninstall "$1"
            ;;
        cleanup)
            cleanup_seq
            ;;
        *)
            echo "Unknown command: $command"
            exit 1
            ;;
    esac
}

main "$@"
