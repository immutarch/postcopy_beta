#!/usr/bin/ash
# SPDX-License-Identifier: GPL-2.0-only

run_latehook() {
    local var_source mountopts passno realtab=/new_root/etc/fstab

    if [ -f "$realtab" ]; then
        if var_source="$(findmnt -snero source --tab-file="$realtab" -T /var)"; then
            mountopts="$(findmnt -snero options --tab-file="$realtab" -T /var)"

            # returning the passno column requires util-linux >= 2.23. for
            # older versions which do not support this column, always fsck.
            passno="$(findmnt -snero passno --tab-file="$realtab" -T /var 2>/dev/null)"
            msg ":: mounting '$var_source' on /var"
            mount "$var_source" /new_root/var -o "$mountopts"
        fi
    fi

    run_factory-reset(){
        msg ":: the system is scheduled for a factory reset, initiating..."
        if home_source="$(findmnt -snero source --tab-file="$realtab" -T /home)"; then
            mountopts_home="$(findmnt -snero options --tab-file="$realtab" -T /home)"
            passno="$(findmnt -snero passno --tab-file="$realtab" -T /home 2>/dev/null)"
            msg ":: mounting '$home_source' on /home"
            mount "$home_source" /new_root/home -o "$mountopts_home"
            msg ":: Erasing user content, please wait..."
            rm -rf "$mountopts_home"/{*,.*}
            msg ":: Erasing user-created system content, please wait..."
            rm -rf /new_root/var/{*,.*}
            msg ":: Reset complete, continuing to boot"
            umount -l "$mountopts_home"
        fi
    }

    # Handle external rootstrap targets
    targets="factory-reset bootctl-merge"
    targets_dir="/new_root/var/overlays/etc/upper/rootstrap-targets/"

    for target in $targets
    do
        if [[ -f "${targets_dir}${target}" ]]; then
            run_${target}()
        fi
    done

    # Check if /new_root/var/overlays/etc/{upper,work} exist, and create them if not
    if [ ! -d "/new_root/var/overlays/etc/upper" ]; then
        mkdir -p /new_root/var/overlays/etc/upper
    fi
    if [ ! -d "/new_root/var/overlays/etc/work" ]; then
        mkdir -p /new_root/var/overlays/etc/work
    fi

    msg ":: mounting /etc overlay from '$var_source' on physical root"
    mount -t overlay /new_root/etc -o index=off,metacopy=off,lowerdir=/new_root/etc,upperdir=/new_root/var/overlays/etc/upper,workdir=/new_root/var/overlays/etc/work /new_root/etc
}

# vim: set ft=sh ts=4 sw=4 et:
